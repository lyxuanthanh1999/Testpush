@model Kinh_Doanh_Khoa_Hoc_Truc_Tuyen_Infrastructure.ViewModels.PaginationBase
@{
    var urlTemplate = Url.Action() + "?page={0}";
    var request = ViewContext.HttpContext.Request;
    urlTemplate = request.Query.Keys.Where(key => key != "page")
        .Aggregate(urlTemplate, (current, key) => current + ("&" + key + "=" + request.Query[key]));
    var startIndex = Math.Max(Model.PageIndex - Model.PageSize, 1);
    var finishIndex = Math.Min(Model.PageIndex + Model.PageSize, Model.PageCount);
}
<ul class="shop-p__pagination">
    @if (Model.PageCount > 1)
    {
        @if (Model.PageIndex > startIndex)
        {
            <li>
                <a title="1" href="@urlTemplate.Replace("{0}", "1")"><i class="fas fa-angle-double-left"></i></a>
            </li>
            <li>
                <a href="@urlTemplate.Replace("{0}", (Model.PageIndex-1).ToString())"><i class="fas fa-angle-left"></i></a>
            </li>
        }
        @for (var i = startIndex; i <= finishIndex; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="is-active">
                    <a href="#">@i</a>
                </li>
            }
            else
            {
                <li>
                    <a href="@urlTemplate.Replace("{0}", i.ToString())">@i</a>
                </li>
            }
        }
        @if (Model.PageIndex < finishIndex)
        {
            <li>
                <a title="@Model.PageCount.ToString()" href="@urlTemplate.Replace("{0}", (Model.PageIndex+1).ToString())"><i class="fas fa-angle-right"></i></a>
            </li>
            <li>
                <a href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())"><i class="fas fa-angle-double-right"></i></a>
            </li>
        }
    }
</ul>